Bootstrap: docker
From: ubuntu:noble

%post
    # Update system
    apt update -y && apt upgrade -y

    # General build requirements
    apt install -y lsb-release wget meson ninja-build gcovr git cmake \
                   software-properties-common gnupg build-essential bear

    # New C++23 requirement
    apt install -y cpp-14 libstdc++-14-dev libc++-dev libc++abi-dev

    # LLVM dependencies
    apt install -y libcapture-tiny-perl libdatetime-perl

    # Install LLVM 20
    wget https://apt.llvm.org/llvm.sh
    chmod +x llvm.sh
    ./llvm.sh 20 all
    rm llvm.sh

wget https://developer.download.nvidia.com/compute/cuda/12.8.0/local_installers/cuda-repo-debian12-12-8-local_12.8.0-570.86.10-1_amd64.deb
 dpkg -i cuda-repo-debian12-12-8-local_12.8.0-570.86.10-1_amd64.deb
 cp /var/cuda-repo-debian12-12-8-local/cuda-*-keyring.gpg /usr/share/keyrings/
 apt-get update
 apt-get -y install cuda-toolkit-12-8

    # AdaptiveCpp dependencies
    apt install -y libboost-all-dev

    # Clone and build AdaptiveCpp
    git clone https://github.com/AdaptiveCpp/AdaptiveCpp.git -b v25.02.0
    CXX=clang++-20 cmake -B AdaptiveCpp/build -S AdaptiveCpp -DCMAKE_INSTALL_PREFIX=/opt/AdaptiveCpp -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda -DWITH_CUDA_BACKEND=ON
    (cd AdaptiveCpp/build; CXX=clang++-20 make install -j 4)

%environment
    export LD_LIBRARY_PATH=/opt/AdaptiveCpp/lib:$LD_LIBRARY_PATH
    export CPLUS_INCLUDE_PATH=/opt/AdaptiveCpp/include/AdaptiveCpp:$CPLUS_INCLUDE_PATH
    export PATH=/opt/AdaptiveCpp/bin:$PATH

%runscript
    exec "$@"
